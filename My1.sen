    词库实际上就是机器可读的电子词典。
把一部人用词典如《现代汉语词典》录入到计算机里，计算机当然也是可以阅读的。
但这里所谓的"可以阅读"，还含有便于查找词语的各种信息的意思。
把人用词典完全照搬过来，机器"读"起来是不方便的。
例如，要在这样的词典中查找某个词条，必须逐字访问，最坏的情况是查遍整个词典才有结果。
因此最好是把词库划分为若干个相关的表（table），例如词表、词性表和义项表：
词表只存放词条及其频度，自动分词一般只需要访问这个表；
词性表存放词条的若干个词性标记及其频度，可供词性标注时使用；
义项表存放词条的若干个义项及其频度，可供义项标注时使用；
句法分析时，这几个表都要用到。
义项表可以直接跟词表建立关系；
也可以跟词性表建立关系，再通过词性表跟词表建立关系。
采用第一种方式，义项表跟词性表没有关系，一些多义词在词性上往往也是多标记的，某义项是哪个词性，或者某词性有哪几个义项，是不清楚的；
采用第二种方式，词语的词性跟义项关系清楚，但要查某义项有哪几种词性比较困难。
当然也可以采用第三种方式，让词性表跟义项表建立关系，通过义项表再跟词性表建立关系；
但是，实际情况是同一词性下常常有多个义项，如动词"打"，这跟语法体系无关；
而同一义项下是否有多个词性，跟语法体系有很大关系，如有的语法体系把"高速"看成区别词兼副词，要是根据"名物化论"，一义多词性的现象就很严重了。

    接下来的问题是把词库存放在什么文件里。
词库规模较小时，可以用几个动态数组来存放各个表，用序列化函数来读写磁盘文件。
词库规模较大时，为了节省内存空间，有两种基本方法可以选择：
第一，存放在自定义的数据文件中；
第二，存放在某种数据库文件中。
用自定义数据文件，需要自己编写大量的代码来管理这些数据，但可以获得最高的时空效率（访问速度快，占用空间小）。
用某种数据库（如Access、dBase、FoxPro），需要对相应的数据库管理系统（DBMS）有一定了解，但数据管理的代码量就很小了。
综合考虑各种因素，我们采用第二种方法，并且选择Access数据库。
Access数据库有安全机制（加口令，或者加密），Visual C++对它有特殊的支持，不用通过ODBC，使用方便，而且速度比较快。
说它使用方便，一是Access有很好的可视化界面（如Access 97），建立库、表、索引、关系、查询等都很容易；
二是Visual C++有跟上述数据库对象相对应的类，甚至可以在没有Access数据库管理系统的情况下完成对Access数据库的基本操作。

